/* AIVIO Chatbot - JavaScript v1.0.0 */
(function (window, document) {
  'use strict';

  const AivioChatbot = {
    config: {
      theme: 'auto',
      position: 'bottom-right',
      autoOpen: false,
      greeting: "üëã Welcome to AIVIO! I'm your AI assistant. I can help you discover AI tools, share trending insights, and guide you through our platform. How can I help you today?"
    },

    data: {
      aiTools: [
        {
          id: '1',
          name: 'ChatGPT',
          description: 'Advanced conversational AI for writing, coding, and analysis',
          category: 'Conversational AI',
          pricing: 'Free / $20/month',
          rating: 4.8,
          users: '100M+'
        },
        {
          id: '2',
          name: 'Midjourney',
          description: 'AI-powered image generation tool for creating stunning artwork',
          category: 'Image Generation',
          pricing: '$10-60/month',
          rating: 4.7,
          users: '15M+'
        },
        {
          id: '3',
          name: 'Claude',
          description: 'Constitutional AI assistant for helpful conversations',
          category: 'Conversational AI',
          pricing: 'Free / $20/month',
          rating: 4.6,
          users: '5M+'
        },
        {
          id: '4',
          name: 'DALL-E 3',
          description: "OpenAI's advanced text-to-image model",
          category: 'Image Generation',
          pricing: '$15-50/month',
          rating: 4.5,
          users: '10M+'
        },
        {
          id: '5',
          name: 'Synthesia',
          description: 'AI video generation platform for professional videos',
          category: 'Video Generation',
          pricing: '$30-90/month',
          rating: 4.4,
          users: '2M+'
        },
        {
          id: '6',
          name: 'Copy.ai',
          description: 'AI-powered copywriting tool for marketing content',
          category: 'Content Writing',
          pricing: 'Free / $36/month',
          rating: 4.3,
          users: '8M+'
        },
        {
          id: '7',
          name: 'Runway ML',
          description: 'Creative AI platform for video editing and generation',
          category: 'Creative AI',
          pricing: 'Free / $12-76/month',
          rating: 4.5,
          users: '3M+'
        },
        {
          id: '8',
          name: 'Jasper',
          description: 'AI writing assistant for business and marketing',
          category: 'Content Writing',
          pricing: '$39-125/month',
          rating: 4.2,
          users: '1M+'
        }
      ],

      trends: [
        {
          title: 'Multimodal AI Integration',
          description: 'AI systems combining text, image, audio, and video capabilities',
          growth: 340,
          impact: 'High',
          confidence: 92
        },
        {
          title: 'AI Agent Automation',
          description: 'Autonomous AI agents for complex task execution',
          growth: 280,
          impact: 'High',
          confidence: 88
        },
        {
          title: 'Edge AI Deployment',
          description: 'AI models running locally on devices for privacy',
          growth: 195,
          impact: 'Medium',
          confidence: 85
        },
        {
          title: 'Creative AI Tools',
          description: 'AI adoption in creative industries for content generation',
          growth: 225,
          impact: 'High',
          confidence: 90
        },
        {
          title: 'Conversational Commerce',
          description: 'AI chatbots driving e-commerce sales',
          growth: 156,
          impact: 'Medium',
          confidence: 82
        }
      ],

      faqs: [
        {
          question: 'How do I find the right AI tool?',
          answer: 'Start by defining your use case, browse categories, and read reviews. Consider pricing and ease of use.',
          keywords: ['find', 'choose', 'select', 'right tool']
        },
        {
          question: 'Are these AI tools free?',
          answer: 'Many offer free tiers with limited features. We indicate pricing for each tool clearly.',
          keywords: ['free', 'cost', 'pricing', 'money']
        },
        {
          question: 'How to get started with AIVIO?',
          answer: 'Browse tool categories, read reviews, and use our search. Chat with me for personalized recommendations!',
          keywords: ['started', 'begin', 'how to use']
        },
        {
          question: 'Can I compare different AI tools?',
          answer: 'Yes! Use our comparison feature to evaluate tools side-by-side.',
          keywords: ['compare', 'comparison', 'versus']
        },
        {
          question: 'How often is information updated?',
          answer: 'We update tool information regularly. New tools are added weekly.',
          keywords: ['updated', 'current', 'latest']
        },
        {
          question: 'Can I submit reviews?',
          answer: 'Absolutely! User reviews help our community make better decisions.',
          keywords: ['review', 'rate', 'feedback']
        }
      ]
    },

    state: {
      messages: [],
      stats: {
        interactions: 0,
        toolsRecommended: 0,
        questionsAnswered: 0,
        trendsShared: 0
      },
      isOpen: false,
      isTyping: false,
      isDark: false,
      elements: {}
    },

    init(options = {}) {
      this.config = { ...this.config, ...options };
      this.detectTheme();
      this.createElements();
      this.attachEvents();
      this.addWelcomeMessage();
      return this;
    },

    detectTheme() {
      if (this.config.theme === 'auto') {
        this.state.isDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
      } else {
        this.state.isDark = this.config.theme === 'dark';
      }
    },

    createElements() {
      const container = document.createElement('div');
      container.className = 'aivio-chatbot';
      container.innerHTML = this.getHTML();
      document.body.appendChild(container);

      this.state.elements = {
        container,
        button: container.querySelector('.aivio-chat-button'),
        window: container.querySelector('.aivio-chat-window'),
        messagesContainer: container.querySelector('.aivio-messages-container'),
        input: container.querySelector('.aivio-message-input'),
        sendBtn: container.querySelector('.aivio-send-btn'),
        closeBtn: container.querySelector('.aivio-close-btn'),
        themeBtn: container.querySelector('.aivio-theme-btn')
      };

      this.updateTheme();
    },

    getHTML() {
      const positionClass = this.getPositionClass();
      return `
        <button class="aivio-chat-button ${positionClass}" title="Chat with AIVIO AI">
          <span>üöÄ</span>
          <div class="aivio-tooltip">Chat with AIVIO AI</div>
        </button>
        <div class="aivio-chat-window ${positionClass}">
          <div class="aivio-chat-header">
            <div class="aivio-chat-header-left">
              <div class="aivio-bot-avatar">ü§ñ</div>
              <div class="aivio-chat-info">
                <h3>AIVIO AI Assistant</h3>
                <p>üü¢ Online ‚Ä¢ <span class="aivio-chat-count">0</span> chats</p>
              </div>
            </div>
            <div class="aivio-chat-controls">
              <button class="aivio-control-btn aivio-theme-btn" title="Toggle theme">üåô</button>
              <button class="aivio-control-btn aivio-close-btn" title="Close chat">‚ùå</button>
            </div>
          </div>
          <div class="aivio-stats-bar">
            <div class="aivio-stat-item">
              <div class="aivio-stat-number aivio-tools-count">0</div>
              <div>Tools Suggested</div>
            </div>
            <div class="aivio-stat-item">
              <div class="aivio-stat-number aivio-questions-count">0</div>
              <div>Questions Answered</div>
            </div>
            <div class="aivio-stat-item">
              <div class="aivio-stat-number aivio-interactions-count">0</div>
              <div>Total Chats</div>
            </div>
          </div>
          <div class="aivio-messages-container"></div>
          <div class="aivio-quick-actions">
            <span class="aivio-quick-actions-label">Quick actions:</span>
            <div class="aivio-quick-buttons">
              <button class="aivio-quick-btn" data-message="Find AI tools for content creation">üîç Find Tools</button>
              <button class="aivio-quick-btn" data-message="Show me latest AI trends">üìà Trends</button>
              <button class="aivio-quick-btn" data-message="How to use AIVIO?">‚ùì Help</button>
              <button class="aivio-quick-btn" data-message="Show popular AI tools">‚≠ê Popular</button>
            </div>
          </div>
          <div class="aivio-input-area">
            <input type="text" class="aivio-message-input" placeholder="Ask about AI tools, trends, or how to use AIVIO..." maxlength="500">
            <button class="aivio-send-btn" title="Send message">üì§</button>
          </div>
        </div>
      `;
    },

    getPositionClass() {
      const positions = {
        'bottom-right': '',
        'bottom-left': 'aivio-position-bl',
        'top-right': 'aivio-position-tr',
        'top-left': 'aivio-position-tl'
      };
      return positions[this.config.position] || '';
    },

    attachEvents() {
      const { button, window: chatWindow, input, sendBtn, closeBtn, themeBtn, container } = this.state.elements;

      button.addEventListener('click', () => this.toggleChat(true));
      closeBtn.addEventListener('click', () => this.toggleChat(false));
      themeBtn.addEventListener('click', () => this.toggleTheme());
      sendBtn.addEventListener('click', () => this.sendMessage());

      input.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && !e.shiftKey) {
          e.preventDefault();
          this.sendMessage();
        }
      });

      container.addEventListener('click', (e) => {
        if (e.target.classList.contains('aivio-quick-btn')) {
          this.sendQuickMessage(e.target.dataset.message);
        }
        if (e.target.classList.contains('aivio-action-btn')) {
          this.handleMessageAction(e.target);
        }
      });

      if (this.config.autoOpen) {
        setTimeout(() => this.toggleChat(true), 2000);
      }
    },

    toggleChat(open) {
      const { button, window: chatWindow } = this.state.elements;
      this.state.isOpen = open;
      if (open) {
        chatWindow.classList.add('open');
        button.style.display = 'none';
        this.state.elements.input.focus();
      } else {
        chatWindow.classList.remove('open');
        button.style.display = 'flex';
      }
    },

    toggleTheme() {
      this.state.isDark = !this.state.isDark;
      this.updateTheme();
    },

    updateTheme() {
      const { container, themeBtn } = this.state.elements;
      if (this.state.isDark) {
        container.classList.add('dark');
        themeBtn.textContent = '‚òÄÔ∏è';
      } else {
        container.classList.remove('dark');
        themeBtn.textContent = 'üåô';
      }
    },

    addWelcomeMessage() {
      this.addMessage('bot', this.config.greeting);
    },

    addMessage(sender, text, options = {}) {
      const message = {
        id: Date.now().toString(),
        sender,
        text,
        timestamp: new Date(),
        ...options
      };
      this.state.messages.push(message);
      this.renderMessage(message);
      this.scrollToBottom();
      return message;
    },

    renderMessage(message) {
      const messageEl = document.createElement('div');
      messageEl.className = `aivio-message ${message.sender}`;

      const avatar = document.createElement('div');
      avatar.className = `aivio-message-avatar aivio-${message.sender}-message-avatar`;
      avatar.textContent = message.sender === 'bot' ? 'ü§ñ' : 'üë§';

      const bubble = document.createElement('div');
      bubble.className = `aivio-message-bubble aivio-${message.sender}-message`;

      const textEl = document.createElement('div');
      textEl.className = 'aivio-message-text';
      textEl.innerHTML = this.formatMessage(message.text);

      const timeEl = document.createElement('div');
      timeEl.className = 'aivio-message-time';
      timeEl.textContent = message.timestamp.toLocaleTimeString([], {
        hour: '2-digit',
        minute: '2-digit'
      });

      bubble.appendChild(textEl);
      bubble.appendChild(timeEl);

      if (message.sender === 'bot') {
        const actions = document.createElement('div');
        actions.className = 'aivio-message-actions';
        actions.innerHTML = `
          <button class="aivio-action-btn" data-action="copy" data-text="${this.escapeHtml(message.text)}" title="Copy">üìã</button>
          <button class="aivio-action-btn" data-action="like" title="Like">üëç</button>
          <button class="aivio-action-btn" data-action="love" title="Love">‚ù§Ô∏è</button>
        `;
        bubble.appendChild(actions);
      }

      if (message.sender === 'user') {
        messageEl.appendChild(bubble);
        messageEl.appendChild(avatar);
      } else {
        messageEl.appendChild(avatar);
        messageEl.appendChild(bubble);
      }

      this.state.elements.messagesContainer.appendChild(messageEl);
    },

    formatMessage(text) {
      return text
        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
        .replace(/\*(.*?)\*/g, '<em>$1</em>')
        .replace(/\n/g, '<br>');
    },

    escapeHtml(text) {
      const div = document.createElement('div');
      div.textContent = text;
      return div.innerHTML;
    },

    sendMessage() {
      const input = this.state.elements.input;
      const text = input.value.trim();
      if (!text) return;

      this.addMessage('user', text);
      input.value = '';
      this.updateStats('interactions');
      this.showTyping();

      setTimeout(() => {
        this.hideTyping();
        const response = this.processMessage(text);
        this.addMessage('bot', response);
      }, Math.random() * 1000 + 800);
    },

    sendQuickMessage(text) {
      this.state.elements.input.value = text;
      this.sendMessage();
    },

    processMessage(input) {
      const text = input.toLowerCase().trim();

      if (
        text.includes('tool') ||
        text.includes('recommend') ||
        text.includes('find') ||
        text.includes('ai') ||
        text.includes('chatgpt') ||
        text.includes('midjourney') ||
        text.includes('claude') ||
        text.includes('writing') ||
        text.includes('image') ||
        text.includes('content') ||
        text.includes('creative') ||
        text.includes('business') ||
        text.includes('video')
      ) {
        return this.handleToolRecommendation(text);
      }

      if (
        text.includes('how') ||
        text.includes('help') ||
        text.includes('guide') ||
        text.includes('start') ||
        text.includes('use') ||
        text.includes('free') ||
        text.includes('cost') ||
        text.includes('price') ||
        text.includes('compare')
      ) {
        return this.handleFAQ(text);
      }

      if (
        text.includes('trend') ||
        text.includes('latest') ||
        text.includes('new') ||
        text.includes('popular') ||
        text.includes('growth') ||
        text.includes('market') ||
        text.includes('insight') ||
        text.includes('future') ||
        text.includes('2024') ||
        text.includes('2025')
      ) {
        return this.handleTrends(text);
      }

      return this.getDefaultResponse();
    },

    handleToolRecommendation(input) {
      let matchingTools = [];

      if (input.includes('writing') || input.includes('content') || input.includes('copy')) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.category.includes('Conversational') || tool.category.includes('Content')
        );
      } else if (
        input.includes('image') ||
        input.includes('art') ||
        input.includes('design') ||
        input.includes('creative')
      ) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.category.includes('Image') || tool.category.includes('Creative')
        );
      } else if (input.includes('video')) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.category.includes('Video')
        );
      } else if (input.includes('chatgpt')) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.name.includes('ChatGPT')
        );
      } else if (input.includes('midjourney')) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.name.includes('Midjourney')
        );
      } else if (input.includes('claude')) {
        matchingTools = this.data.aiTools.filter(tool =>
          tool.name.includes('Claude')
        );
      } else {
        matchingTools = this.data.aiTools.slice(0, 4);
      }

      this.updateStats('toolsRecommended', matchingTools.length);

      return `
üî• **Here are my top AI tool recommendations:**

${matchingTools
  .map((tool, index) => `
${index + 1}. **${tool.name}** ‚≠ê ${tool.rating}/5
üìù ${tool.description}
üí∞ Pricing: ${tool.pricing}
üë• Users: ${tool.users}
üè∑Ô∏è Category: ${tool.category}
`)
  .join('\n')}
üí° **Want more specific recommendations?** Try asking:
‚Ä¢ "Find writing tools"
‚Ä¢ "Show image generation tools"
‚Ä¢ "Creative AI tools"
‚Ä¢ "Business automation tools"`;
    },

    handleFAQ(input) {
      let matchingFAQ = null;

      if (input.includes('free') || input.includes('cost') || input.includes('price')) {
        matchingFAQ = this.data.faqs.find(faq => faq.keywords.includes('free'));
      } else if (input.includes('start') || input.includes('begin')) {
        matchingFAQ = this.data.faqs.find(faq => faq.keywords.includes('started'));
      } else if (input.includes('find') || input.includes('choose')) {
        matchingFAQ = this.data.faqs.find(faq => faq.keywords.includes('find'));
      } else if (input.includes('compare')) {
        matchingFAQ = this.data.faqs.find(faq => faq.keywords.includes('compare'));
      } else {
        matchingFAQ = this.data.faqs[0];
      }

      this.updateStats('questionsAnswered');
      if (matchingFAQ) {
        return `
‚ùì **${matchingFAQ.question}**

‚úÖ ${matchingFAQ.answer}

üîó **Related Questions:**
‚Ä¢ How to compare AI tools?
‚Ä¢ What are the pricing models?
‚Ä¢ How to get started with AIVIO?
‚Ä¢ Can I submit tool reviews?`;
      }

      return `
üìö **AIVIO Platform Guide:**

üîç **Discover Tools**: Browse 500+ curated AI tools
üìä **Compare Options**: Side-by-side tool comparisons
üí° **Get Recommendations**: AI-powered suggestions
üìà **Stay Updated**: Latest AI trends and insights
üéØ **Categories**: Writing, Image, Video, Business, Creative

üí¨ **Ask me specific questions like:**
‚Ä¢ "Are these tools free?"
‚Ä¢ "How to choose the right tool?"`;
    },

    handleTrends(input) {
      this.updateStats('trendsShared', this.data.trends.length);
      return `
üöÄ **Latest AI Trends & Market Insights:**

${this.data.trends
  .map((trend, idx) => `
${idx + 1}. **${trend.title}** üî•
üìä ${trend.description}
üìà Growth Rate: +${trend.growth}%
üéØ Market Impact: ${trend.impact}
üîÆ Confidence: ${trend.confidence}%
üí° Why it matters: Revolutionary change in ${trend.title.toLowerCase()}
`)
  .join('\n')}
**üîÆ Future Predictions:**
‚Ä¢ AI agents will automate 40% of business tasks by 2025
‚Ä¢ Multimodal AI will become the new standard
‚Ä¢ Creative industries will be transformed by AI tools
‚Ä¢ Edge AI will enable real-time processing everywhere

üìà **Want specific trend analysis?** Ask about:
‚Ä¢ "Business AI trends"
‚Ä¢ "Creative AI growth"
‚Ä¢ "Technology predictions"`;
    },

    getDefaultResponse() {
      return `
üëã **Welcome to AIVIO AI Assistant!**

I can help you with:

ü§ñ **AI Tool Discovery**
‚Ä¢ Find tools for writing, design, business
‚Ä¢ Compare features and pricing
‚Ä¢ Get personalized recommendations

üìà **Market Insights**
‚Ä¢ Latest AI trends and growth data
‚Ä¢ Industry predictions and analysis
‚Ä¢ Technology adoption rates

üìö **Platform Guidance**
‚Ä¢ How to use AIVIO effectively
`;
    },

    // (Other helper methods: updateStats, showTyping, hideTyping, scrollToBottom, handleMessageAction‚Ä¶)
  };

  // Initialize on page load
  window.AivioChatbot = AivioChatbot.init();
})(window, document);
